<launch>
    <!-- Must set robot_number as global parameter!! -->
    <arg name="robot_number" default="3"/>
    
    <!-- Other maps: larger_garage, map4, map7, city, forest, clutter, clutter_larger, wide_grid, low_forest, simple_forest, small_forest -->
    <arg name="world_name" default="small_forest"/>
    <arg name="gazebo_gui" default="true"/>

    <param name="env_name" value="$(arg world_name)"/>
    <param name="robot_number" value="$(arg robot_number)"/>


    <!-- Gazebo simulator -->
    <include file="$(find p2os_urdf)/launch/run_three.launch" >
        <arg name="world_name" default="$(arg world_name)"/>
        <arg name="gazebo_gui" default="$(arg gazebo_gui)"/>
    </include>


    <!-- Robot 1 -->
    <!-- Autonomous exploration development environment -->
    <include file="$(find vehicle_simulator)/launch/develop_environment.launch" >
        <arg name="name_space" default="robot_1"/>
        <!-- Necessary to set initial goal point for local planner -->
        <!-- robot will not subscribe this command, so it is not important -->
        <arg name="vehicleX" default="0"/>
        <arg name="vehicleY" default="0"/>
    </include>



    <!-- Robot 2 -->
    <!-- Autonomous exploration development environment -->
    <include file="$(find vehicle_simulator)/launch/develop_environment.launch" >
        <arg name="name_space" default="robot_2"/>
        <!-- Necessary to set initial goal point for local planner -->
        <!-- robot will not subscribe this command, so it is not important -->
        <arg name="vehicleX" default="0"/>
        <arg name="vehicleY" default="0"/>
    </include>


    <!-- Robot 3 -->
    <!-- Autonomous exploration development environment -->
    <include file="$(find vehicle_simulator)/launch/develop_environment.launch" >
        <arg name="name_space" default="robot_3"/>
        <!-- Necessary to set initial goal point for local planner -->
        <!-- robot will not subscribe this command, so it is not important -->
        <arg name="vehicleX" default="0"/>
        <arg name="vehicleY" default="0"/>
    </include>


    <!-- TF publisher to bridge map and odom -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="static_tf_pub_map_to_odom" args="0 0 0 0 0 0 map odom" />
</launch>